trigger:
    - master

pool:
    vmImage: "ubuntu-latest"

variables:
    buildConfiguration: "Release"
    azureSubscription: "Azure - MS Azure Sponsorship"
    resourceGroup: "Web.WestEurope"
    appName: "aitopenspace"

stages:
    - template: "build.yml"
      parameters:
          buildConfiguration: $(buildConfiguration)

    - stage: Staging
      dependsOn: Build
      condition: and(succeeded(), or(eq(variables['build.sourceBranch'], 'refs/heads/master'), eq(variables['Build.Reason'], 'Manual')))
      jobs:
          - deployment: Staging
            displayName: Deploy Web App
            pool:
                vmImage: "ubuntu-latest"
            environment: "openspaceplanner-staging"
            strategy:
                runOnce:
                    deploy:
                        steps:
                            - download: current
                              artifact: WebApp
                            - task: AzureWebApp@1
                              displayName: "Azure Web App Deploy: aitopenspace"
                              inputs:
                                  azureSubscription: $(azureSubscription)
                                  appType: webApp
                                  appName: aitopenspace
                                  deployToSlotOrASE: true
                                  resourceGroupName: $(resourceGroup)
                                  slotName: Staging
                                  package: "$(Pipeline.Workspace)/WebApp/**/*.zip"
                                  deploymentMethod: zipDeploy

    - stage: Production
      dependsOn: Staging
      condition: and(succeeded(), or(eq(variables['build.sourceBranch'], 'refs/heads/master'), eq(variables['Build.Reason'], 'Manual')))
      jobs:
          - deployment: Production
            displayName: Deploy Web App
            pool:
                vmImage: "ubuntu-latest"
            environment: "openspaceplanner-production"
            strategy:
                runOnce:
                    deploy:
                        steps:
                            - download: none
                            - task: AzureAppServiceManage@0
                              displayName: "Swap Slots: aitopenspace"
                              inputs:
                                  azureSubscription: $(azureSubscription)
                                  WebAppName: $(appName)
                                  ResourceGroupName: $(resourceGroup)
                                  SourceSlot: Staging
